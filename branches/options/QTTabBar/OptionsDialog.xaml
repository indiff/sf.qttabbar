<?xml version="1.0" encoding="UTF-8"?>
<!--
    This file is part of QTTabBar, a shell extension for Microsoft
    Windows Explorer.
    Copyright (C) 2007-2010  Quizo, Paul Accisano

    QTTabBar is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    QTTabBar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with QTTabBar.  If not, see <http://www.gnu.org/licenses/>.
-->

<Window x:Name="wndOptionsDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:qt="clr-namespace:QTTabBarLib"
    x:Class="QTTabBarLib.OptionsDialog"
    Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}"
    Height="647"
    Title="QTTabBar Options"
    Width="724">
    <Window.Resources>
        <qt:BoolInverterConverter           x:Key="BoolInverterConverter"/>
        <qt:BitmapToImageSourceConverter    x:Key="BitmapToImageSourceConverter"/>
        <qt:LogicalAndMultiConverter        x:Key="LogicalAndMultiConverter"/>
        <qt:BoolJoinMultiConverter          x:Key="BoolJoinMultiConverter"/>
        <qt:StringEqualityConverter         x:Key="StringEqualityConverter"/>
        <BooleanToVisibilityConverter       x:Key="BooleanToVisibilityConverter"/>
        <qt:LevelToIndentConverter          x:Key="LevelIndentConverter"/>
        <qt:ObjectToClassNameConverter      x:Key="ObjectToClassNameConverter"/>
        <qt:ColorToBrushConverter           x:Key="ColorToBrushConverter"/>
        <qt:FontStringConverter             x:Key="FontStringConverter"/>

        <Style x:Key="SectionHeaderStyle" TargetType="Label">
            <Setter Property="Background"       Value="#FFF0F2F5"/>
            <Setter Property="BorderBrush"      Value="#FFE2E4E7"/>
            <Setter Property="BorderThickness"  Value="0,0,0,1"/>
            <Setter Property="FontSize"         Value="11"/>
            <Setter Property="FontWeight"       Value="Bold"/>
            <Setter Property="Foreground"       Value="#FF3B3B3B"/>
            <Setter Property="Height"           Value="22"/>
            <Setter Property="Margin"           Value="0,14,0,9"/>
            <Setter Property="Padding"          Value="6,2,0,2"/>
        </Style>
        <!--  Hm...
        <Style x:Key="CheckedSectionHeaderStyle" TargetType="Border">
            <Setter Property="Background"       Value="#FFF0F2F5"/>
            <Setter Property="BorderBrush"      Value="#FFE2E4E7"/>
            <Setter Property="BorderThickness"  Value="0,0,0,1"/>
            <Setter Property="Height"           Value="22"/>
            <Setter Property="Margin"           Value="0,14,0,9"/>
            <Setter Property="Padding"          Value="7,2,0,2"/>
            <Style.Resources>
                <Style TargetType="CheckBox">
                    <Setter Property="FontSize"             Value="11"/>
                    <Setter Property="FontWeight"           Value="Bold"/>
                    <Setter Property="Foreground"           Value="#FF3B3B3B"/>
                    <Setter Property="HorizontalAlignment"  Value="Left"/>
                    <Setter Property="VerticalAlignment"    Value="Center"/>
                </Style>
            </Style.Resources>
        </Style>
        -->
        <Style x:Key="PageHeaderImageStyle" TargetType="Image">
            <Setter Property="Height"           Value="32"/>
            <Setter Property="Margin"           Value="8,0,0,0"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
            <Setter Property="Stretch"          Value="None"/>
        </Style>
        <Style x:Key="CheckStyle" TargetType="Control">
            <Setter Property="Height"           Value="16"/>
            <Setter Property="Margin"           Value="13,1,0,1"/>
        </Style>
        <Style x:Key="IndentedCheckStyle" TargetType="Control" BasedOn="{StaticResource CheckStyle}">
            <Setter Property="Margin"           Value="31,1,0,1"/>
        </Style>
        <Style x:Key="LabelStyle" TargetType="Label" BasedOn="{StaticResource CheckStyle}">
            <Setter Property="Margin"           Value="13,1,10,1"/>
            <Setter Property="Padding"          Value="0"/>
        </Style>
        <DataTemplate x:Key="CategoryItemTemplate">
            <Grid
                Background="White"
                Height="25"
                Margin="0,1"
                Width="128">
                <TextBlock
                    Margin="10,1"
                    Text="{Binding Header}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CategorySelectedTemplate">
            <Grid
                Background="White"
                Height="25"
                Margin="0,1"
                Width="128">
                <Image Source="{Binding Source={x:Static qt:Resources_Image.imgOptions_Selected}, Converter={StaticResource BitmapToImageSourceConverter}}"/>
                <TextBlock
                    Margin="10,1"
                    Text="{Binding Header}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CategoryHotTemplate">
            <Grid
                Background="White"
                Height="25"
                Margin="0,1"
                Width="128">
                <Image Source="{Binding Source={x:Static qt:Resources_Image.imgOptions_Hot}, Converter={StaticResource BitmapToImageSourceConverter}}"/>
                <TextBlock
                    Margin="10,1"
                    Text="{Binding Header}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CategorySelAndHotTemplate">
            <Grid
                Background="White"
                Height="25"
                Margin="0,1"
                Width="128">
                <Image Source="{Binding Source={x:Static qt:Resources_Image.imgOptions_SelAndHot}, Converter={StaticResource BitmapToImageSourceConverter}}"/>
                <TextBlock
                    Margin="10,1"
                    Text="{Binding Path=Header}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CategoryNoFocusTemplate">
            <Grid
                Background="White"
                Height="25"
                Margin="0,1"
                Width="128">
                <Image Source="{Binding Source={x:Static qt:Resources_Image.imgOptions_NoFocus}, Converter={StaticResource BitmapToImageSourceConverter}}"/>
                <TextBlock
                    Margin="10,1"
                    Text="{Binding Path=Header}" 
                    VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="CategoryListContainerStyle"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="ContentTemplate"  Value="{StaticResource CategoryItemTemplate}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <EventSetter
                Event="PreviewMouseRightButtonDown"
                Handler="ListBoxItem_PreviewMouseRightButtonDown" />
            <EventSetter
                Event="PreviewMouseDown"
                Handler="ListBoxItem_PreviewMouseDown" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource CategoryNoFocusTemplate}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource CategoryHotTemplate}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsKeyboardFocused" Value="True"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ContentTemplate" Value="{StaticResource CategorySelectedTemplate}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ContentTemplate" Value="{StaticResource CategorySelAndHotTemplate}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="ButtonBarItemTemplate">
            <StackPanel Orientation="Horizontal">
                <Image
                    RenderOptions.BitmapScalingMode="NearestNeighbor">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="16" />
                            <Setter Property="Width" Value="16" />
                            <Setter Property="Source" Value="{Binding Path=SmallImage, Converter={StaticResource BitmapToImageSourceConverter}}" />
                            <Setter Property="Margin" Value="0,2" />
                            <Style.Triggers>
                                <DataTrigger 
                                    Binding="{Binding ElementName=chkLargeButtons, Path=IsChecked}" 
                                    Value="True">
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="Width" Value="24" />
                                    <Setter Property="Source" Value="{Binding Path=LargeImage, Converter={StaticResource BitmapToImageSourceConverter}}" />
                                    <Setter Property="Margin" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock
                    Margin="5,0"
                    Text="{Binding Path=Text}"
                    VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PluginItemTemplate">
            <DockPanel>
                <TextBlock 
                    DockPanel.Dock="Top"
                    Text="This plugin will be installed when you press OK or Apply."
                    Visibility="{Binding Path=InstallOnClose, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock 
                    DockPanel.Dock="Top"
                    Text="This plugin will be uninstalled when you press OK or Apply."
                    Visibility="{Binding Path=UninstallOnClose, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock 
                    DockPanel.Dock="Top"
                    Text="This plugin will be disabled when you press OK or Apply."
                    Visibility="{Binding Path=DisableOnClose, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock 
                    DockPanel.Dock="Top"
                    Text="This plugin will be enabled when you press OK or Apply."
                    Visibility="{Binding Path=EnableOnClose, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Separator DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Margin="0"/>
                <Grid
                    VerticalAlignment="Top"
                    Width="48"
                    Height="48">
                    <Image 
                        Opacity="{Binding Path=Opacity}" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Stretch="None"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        Source="{Binding Path=Icon, Converter={StaticResource BitmapToImageSourceConverter}}"/>
                </Grid>
                <DockPanel DockPanel.Dock="Bottom" LastChildFill="False"
                    Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button x:Name="btnPluginOptions" 
                        Click="btnPluginOptions_Click"
                        Content="Options"
                        DockPanel.Dock="Left"
                        Width="70"
                        Margin="0,10,6,6"
                        Visibility="{Binding Path=HasOptions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button x:Name="btnPluginRemove"
                        Click="btnPluginRemove_Click"
                        Content="Uninstall"
                        DockPanel.Dock="Right"
                        Margin="0,10,6,6"
                        Width="70"/>
                    <Button x:Name="btnPluginDisable"
                        Click="btnPluginDisable_Click"
                        Content="Disable"
                        DockPanel.Dock="Right"
                        Width="70"
                        Margin="0,10,6,6"/>
                </DockPanel>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=Title}" FontSize="15" FontWeight="ExtraBold" Margin="2" VerticalAlignment="Bottom"/>
                        <TextBlock Text="{Binding Path=Author}" Margin="10,2" VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <TextBlock 
                        Text="{Binding Path=Desc}"
                        Margin="2"
                        HorizontalAlignment="Left"
                        TextWrapping="Wrap"
                        TextTrimming="CharacterEllipsis"
                        MaxHeight="50"
                        />
                </StackPanel>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="WinFormsGroupStyle">
            <DockPanel LastChildFill="True">
                <TextBlock 
                    DockPanel.Dock="Left"
                    Foreground="MediumBlue"
                    Margin="20, 1, 4, 4"
                    Text="{Binding Path=Name}"/>
                <Border
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Height="1"
                    Margin="0,0,10,0"
                    SnapsToDevicePixels="True"/>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="FileTypeItemTemplate">
            <StackPanel Orientation="Horizontal">
                <Image
                    Source="{Binding Path=Icon, Converter={StaticResource BitmapToImageSourceConverter}}"
                    Width="16"
                    Height="16"
                    Stretch="Fill"/>
                <qt:EditableHeader
                    Text="{Binding Path=Extension}"
                    IsEditing="{Binding Path=IsEditing}"
                    Padding="2,0"
                    Margin="0,2"
                    Container="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                <TextBlock
                    Text="{Binding Path=FriendlyName}"
                    VerticalAlignment="Center"
                    Margin="0,2,0,0"
                    FontSize="10">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <HierarchicalDataTemplate x:Key="GroupItemTemplate" ItemsSource="{Binding Path=Folders}">
        </HierarchicalDataTemplate>
        
        <!-- TreeListView stuff -->
        <Style x:Key="ExpandCollapseToggleStyle"
            TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
              Value="False"/>
            <Setter Property="Width"
              Value="19"/>
            <Setter Property="Height"
              Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"
                            Height="13"
                            Background="Transparent">
                            <Border Width="9"
                                Height="9"
                                BorderThickness="1"
                                BorderBrush="#FF7898B5"
                                CornerRadius="1"
                                SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                        EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White"
                                                Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6"
                                                Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath"
                                    Margin="1,1,1,1"
                                    Fill="Black"
                                    Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                                        L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                Value="True">
                                <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="GroupFolderCellTemplate">
            <Grid>
                <StackPanel
                    x:Name="panelBody"
                    Orientation="Horizontal"
                    Margin="0,2">
                    <Image
                        Source="{Binding Path=Icon, Converter={StaticResource BitmapToImageSourceConverter}}"
                        Width="16"
                        Height="16"
                        Stretch="Fill"
                        Margin="0,0,2,0"/>
                    <qt:EditableHeader
                        x:Name="txtName"
                        Text="{Binding Path=Name}"
                        Visibility="Collapsed"
                        Container="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
                    <qt:EditableHeader
                        x:Name="txtPath"
                        Text="{Binding Path=Path}"
                        Visibility="Collapsed"
                        Container="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
                    <qt:EditableHeader
                        x:Name="txtDisplayText"
                        Text="{Binding Path=DisplayText, Mode=OneWay}"
                        ReadOnly="True"
                        Visibility="Collapsed"/>
                </StackPanel>
                <Separator
                    x:Name="separator"
                    Height="5"
                    Width="{TemplateBinding ActualWidth}"
                    Visibility="Collapsed"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger
                    Binding="{Binding Converter={StaticResource ObjectToClassNameConverter}}" 
                    Value="SeparatorEntry">
                    <Setter
                        TargetName="panelBody"
                        Property="Visibility"
                        Value="Collapsed"/>
                    <Setter
                        TargetName="separator"
                        Property="Visibility"
                        Value="Visible"/>
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding Converter={StaticResource ObjectToClassNameConverter}}" 
                    Value="GroupEntry">
                    <Setter
                        TargetName="txtName"
                        Property="Visibility"
                        Value="Visible"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition
                            Binding="{Binding Converter={StaticResource ObjectToClassNameConverter}}"
                            Value="FolderEntry"/>
                        <Condition
                            Binding="{Binding Path=IsVirtualFolder}"
                            Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter
                        TargetName="txtPath"
                        Property="Visibility"
                        Value="Visible"/>
                </MultiDataTrigger>
                <DataTrigger
                    Binding="{Binding Path=IsVirtualFolder}" 
                    Value="True">
                    <Setter
                        TargetName="txtDisplayText"
                        Property="Visibility"
                        Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="PrimaryCellTemplate">
            <DockPanel>
                <ToggleButton x:Name="Expander" 
                      Style="{StaticResource ExpandCollapseToggleStyle}" 
                      Margin="{Binding Level,
                             Converter={StaticResource 
                                        LevelIndentConverter},
                             RelativeSource={RelativeSource 
                                             AncestorType=
                                             {x:Type qt:TreeListViewItem}}}"
                      IsChecked="{Binding Path=IsExpanded,
                                 RelativeSource={RelativeSource 
                                                 AncestorType=
                                                  {x:Type qt:TreeListViewItem}}}"
                      ClickMode="Press"/>
                <ContentPresenter
                    Content="{Binding}"
                    ContentTemplate="{StaticResource GroupFolderCellTemplate}"/>
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems,
                               RelativeSource={RelativeSource 
                               AncestorType={x:Type qt:TreeListViewItem}}}" 
                    Value="False">
                    <Setter TargetName="Expander"
                        Property="Visibility"
                        Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <GridViewColumnCollection x:Key="gvcc">
            <GridViewColumn Header="Folder"
                CellTemplate="{StaticResource PrimaryCellTemplate}"
                Width="300"/>
            <GridViewColumn Header="Startup" Width="60">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <CheckBox x:Name="chkStartup"
                            IsChecked="{Binding Path=Startup}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="Collapsed"/>
                        <DataTemplate.Triggers>
                            <DataTrigger
                                Binding="{Binding Converter={StaticResource ObjectToClassNameConverter}}" 
                                Value="GroupEntry">
                                <Setter
                                    TargetName="chkStartup"
                                    Property="Visibility"
                                    Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Shortcut key">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock x:Name="txtShortcutKey"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="Collapsed">Ctrl + A</TextBlock>
                        <DataTemplate.Triggers>
                            <DataTrigger
                                Binding="{Binding Converter={StaticResource ObjectToClassNameConverter}}"
                                Value="GroupEntry">
                                <Setter
                                    TargetName="txtShortcutKey"
                                    Property="Visibility"
                                    Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridViewColumnCollection>
        <Style TargetType="{x:Type qt:TreeListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type qt:TreeListViewItem}">
                        <StackPanel>
                            <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{StaticResource gvcc}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                Value="false">
                                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                                        Value="false"/>
                                    <Condition Property="Width"
                                        Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader"
                             Value="false"/>
                                    <Condition Property="Height"
                             Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected"
                                Value="true">
                                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource 
                                        {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground"
                                    Value="{DynamicResource 
                                        {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                        Value="true"/>
                                    <Condition Property="IsSelectionActive"
                                        Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource 
                          {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                        Value="{DynamicResource 
                          {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource 
                                        {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type qt:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type qt:TreeListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{StaticResource gvcc}"
                                            DockPanel.Dock="Top"/>
                                <ItemsPresenter/>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    
    <DockPanel>
        <StackPanel
            DockPanel.Dock="Bottom"
            HorizontalAlignment="Right"
            Orientation="Horizontal"
            VerticalAlignment="Center">
            <Button x:Name="btnResetPage"
                Click="btnResetPage_Click"
                Content="Reset Page"
                Height="20"
                Margin="7,0,5,6"
                Padding="0"
                Width="75"/>
            <Button x:Name="btnResetAll"
                Click="btnResetAll_Click"
                Content="Reset All"
                Height="20"
                Margin="7,0,25,6"
                Padding="0"
                Width="75"/>
            <Button x:Name="btnOK"
                Click="btnOK_Click"
                Content="OK"
                Height="20"
                Margin="7,0,5,6"
                Padding="0"
                Width="75"/>
            <Button x:Name="btnCancel"
                Click="btnCancel_Click"
                Content="Cancel"
                Height="20"
                Margin="7,0,5,6"
                Padding="0"
                Width="75"/>
            <Button x:Name="btnApply"
                Click="btnApply_Click"
                Content="Apply"
                Height="20"
                Margin="7,0,5,6"
                Padding="0"
                Width="75"/>
        </StackPanel>
        <ListView x:Name="lstCategories"
            DockPanel.Dock="Left"
            ItemsSource="{Binding Items, ElementName=tabbedPanel}"
            ItemContainerStyle="{StaticResource CategoryListContainerStyle}" 
            Margin="3"
            SelectionMode="Single"
            Width="136">
            <ListBox.Resources>
                <SolidColorBrush 
                    x:Key="{x:Static SystemColors.HighlightBrushKey}" 
                    Color="White"/>
                <SolidColorBrush 
                    x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                    Color="Black"/>
                <SolidColorBrush 
                    x:Key="{x:Static SystemColors.ControlBrushKey}"
                    Color="White"/>
            </ListBox.Resources>
        </ListView>
    	<TabControl x:Name="tabbedPanel"
            Background="{StaticResource {x:Static SystemColors.ControlLightLightBrushKey}}"
            DataContext="{Binding workingConfig, ElementName=wndOptionsDialog}"
            Margin="3,3,5,3"
            Padding="0"
            SelectedItem="{Binding SelectedItem, ElementName=lstCategories}"
            TabStripPlacement="Left">
            <TabItem x:Name="tabWindow"
                DataContext="{Binding Path=window}"
                Header="Window"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabWindow}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Change how Explorer Windows behave."
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Single Window mode"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Image
                            Height="64"
                            Margin="64,0,64,2"
                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                            Source="{Binding Source={x:Static qt:Resources_Image.imgCapture}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Stretch="None"
                            Width="64"/>
                        <Image
                            Grid.Column="1"
                            Height="64"
                            Margin="64,0,64,2"
                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                            Source="{Binding Source={x:Static qt:Resources_Image.imgNoCapture}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Stretch="None"
                            Width="64"/>
                        <qt:RadioButtonEx x:Name="radSingleWindowOn"
                            Content="Capture new Explorer&#x0a;windows as new tabs"
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            IsCheckedReal="{Binding Path=CaptureNewWindows}"/>
                        <qt:RadioButtonEx x:Name="radSingleWindowOff"
                            Content="Do not capture new&#x0a;Explorer windows"
                            Grid.Column="1"
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            IsCheckedReal="{Binding Path=CaptureNewWindows, Converter={StaticResource BoolInverterConverter}}"/>
                    </Grid>
                    <Label
                        Content="Default location for new windows and tabs"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <StackPanel 
                        Margin="13,0"
                        Orientation="Horizontal">
                        <qt:FileFolderEntryBox x:Name="entDefaultLocation" 
                            Folder="True"
                            SelectedIDL="{Binding Path=DefaultLocation}"
                            ShowIcon="True" 
                            Width="400"/>
                    </StackPanel>
                    <Label x:Name="lblRestoreTabs"
                        Content="Session saving"
                        Style="{StaticResource SectionHeaderStyle}">
                        <!-- We use the Tag of the group's section header
                             label to keep track of the property values, and
                             all the radio buttons are bound to it. -->
                        <Label.Tag>
                            <MultiBinding 
                                Converter="{StaticResource BoolJoinMultiConverter}"
                                Mode="TwoWay">
                                <Binding Path="RestoreSession" Mode="TwoWay"/>
                                <Binding Path="RestoreOnlyLocked" Mode="TwoWay"/>
                            </MultiBinding>
                        </Label.Tag>
                    </Label>
                    <qt:RadioButtonEx x:Name="radRestoreTabsOff"
                        Content="Start a new session each time"
                        GroupName="Session"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="False,False"
                                ElementName="lblRestoreTabs"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>    
                    <qt:RadioButtonEx x:Name="radRestoreTabsOn"
                        Content="Restore all tabs from the previous session"
                        GroupName="Session"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="True,False"
                                ElementName="lblRestoreTabs"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>
                    <qt:RadioButtonEx x:Name="radRestoreTabsLockedOnly"
                        Content="Restore only the locked tabs from the previous session"
                        GroupName="Session"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="True,True"
                                ElementName="lblRestoreTabs"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>
                    <Label x:Name="lblCloseButton"
                        Content="When the close button is clicked"
                        Style="{StaticResource SectionHeaderStyle}">
                        <Label.Tag>
                            <MultiBinding 
                                Converter="{StaticResource BoolJoinMultiConverter}"
                                Mode="TwoWay">
                                <Binding Path="IsChecked" ElementName="chkTrayClose"/>
                                <Binding Path="CloseBtnClosesSingleTab" Mode="TwoWay"/>
                                <Binding Path="CloseBtnClosesUnlocked" Mode="TwoWay"/>
                            </MultiBinding>
                        </Label.Tag>
                    </Label>
                    <qt:RadioButtonEx x:Name="radCloseBtnWindow"
                        Content="Close the window"
                        GroupName="Close"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkTrayClose, Converter={StaticResource BoolInverterConverter}}"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="False,False,False"
                                ElementName="lblCloseButton"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>
                    <qt:RadioButtonEx x:Name="radCloseBtnTabs"
                        Content="Close the current tab"
                        GroupName="Close"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkTrayClose, Converter={StaticResource BoolInverterConverter}}"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="False,True,False"
                                ElementName="lblCloseButton"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>
                    <qt:RadioButtonEx x:Name="radCloseBtnUnlocked"
                        Content="Close all unlocked tabs"
                        GroupName="Close"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkTrayClose, Converter={StaticResource BoolInverterConverter}}"
                        Style="{StaticResource CheckStyle}">
                        <qt:RadioButtonEx.IsCheckedReal>
                            <Binding
                                Converter="{StaticResource StringEqualityConverter}"
                                ConverterParameter="False,False,True"
                                ElementName="lblCloseButton"
                                Path="Tag"/>
                        </qt:RadioButtonEx.IsCheckedReal>
                    </qt:RadioButtonEx>
                    <Label
                        Content="Send the window to the Task Tray on"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkTrayClose"
                        Content="Close"
                        IsChecked="{Binding Path=TrayOnClose}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkTrayMinimize"
                        Content="Minimize"
                        IsChecked="{Binding Path=TrayOnMinimize}"
                        Style="{StaticResource CheckStyle}"/>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabTabs"
                DataContext="{Binding Path=tabs}"
                Header="Tabs"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabTabs}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Change options related to tabs."
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Behavior"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label
                            Content="Open new tabs:"
                            Style="{StaticResource LabelStyle}"/>
                        <ComboBox x:Name="cmbNewTabPos"
                            DisplayMemberPath="Value"
                            Grid.Column="1"
                            Height="23"
                            Margin="0,2,-47,2"
                            SelectedValue="{Binding Path=NewTabPosition}"
                            SelectedValuePath="Key"
                            Width="167"/>
                        <Label
                            Content="When the current tab is closed, switch to the:"
                            Grid.Row="1"
                            Style="{StaticResource LabelStyle}"/>
                        <ComboBox x:Name="cmbNextAfterClosed"
                            DisplayMemberPath="Value"
                            Grid.Column="1"
                            Grid.Row="1"
                            Height="23"
                            Margin="0,2,-47,2"
                            SelectedValue="{Binding Path=NextAfterClosed}"
                            SelectedValuePath="Key"
                            Width="167"/>
                    </Grid>
                    <CheckBox x:Name="chkActivateNewTab"
                        Content="Switch to new tabs immediately"
                        IsChecked="{Binding Path=ActivateNewTab}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkNeverOpenSame"
                        Content="Reuse existing tabs"
                        IsChecked="{Binding Path=NeverOpenSame}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkRenameAmbTabs"
                        Content="Rename ambiguous tabs"
                        IsChecked="{Binding Path=RenameAmbTabs}"
                        Style="{StaticResource CheckStyle}"/>
                    <StackPanel Orientation="Horizontal">
                        <Label
                            Content="When drag-hovering over a tab,"
                            Style="{StaticResource LabelStyle}"/>
                        <qt:RadioButtonEx x:Name="radDragOverTabOpensSTD_No"
                            Content="Switch to it"
                            IsCheckedReal ="{Binding Path=DragOverTabOpensSDT, Converter={StaticResource BoolInverterConverter}}"
                            Margin="0,1,10,1"/>
                        <qt:RadioButtonEx x:Name="radDragOverTabOpensSDT_Yes"
                            Content="Show the Subfolder Tip menu"
                            IsCheckedReal ="{Binding Path=DragOverTabOpensSDT}"
                            Margin="0,1,10,1"/>
                    </StackPanel>
                    <Label
                        Content="Tab icons"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkShowFolderIcon"
                        Content="Show folder icons on tabs"
                        IsChecked="{Binding Path=ShowFolderIcon}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkShowSDTOnTab"
                        Content="Show the Subfolder Tip menu when the icon is clicked"
                        IsChecked="{Binding Path=ShowSubDirTipOnTab}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowFolderIcon}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <CheckBox x:Name="chkShowDriveLetters"
                        Content="Show the drive letter on the icon"
                        IsChecked="{Binding Path=ShowDriveLetters}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowFolderIcon}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <Label
                        Content="Close button"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkShowCloseButtons"
                        Content="Show close button on tabs"
                        IsChecked="{Binding Path=ShowCloseButtons}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkCloseBtnsWithAlt"
                        Content="Only with the Alt key down"
                        IsChecked="{Binding Path=CloseBtnsWithAlt}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowCloseButtons}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <CheckBox x:Name="CloseBtnsOnHover"
                        Content="Only on mouse hover"
                        IsChecked="{Binding Path=CloseBtnsOnHover}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowCloseButtons}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <Label
                        Content="Tab Bar"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkShowNavButtons"
                        Content="Show navigation buttons on the tab bar"
                        IsChecked="{Binding Path=ShowNavButtons}"
                        Style="{StaticResource CheckStyle}"/>
                    <StackPanel
                        Margin="31,1,0,1"
                        Orientation="Horizontal">
                        <qt:RadioButtonEx x:Name="radNavButtonsOnRight_No"
                            Content="On the left"
                            HorizontalAlignment="Left"
                            IsEnabled="{Binding Path=IsChecked, ElementName=chkShowNavButtons}"
                            Margin="0,0,10,0"
                            Style="{StaticResource CheckStyle}">
                            <qt:RadioButtonEx.IsCheckedReal>
                                <MultiBinding Converter="{StaticResource LogicalAndMultiConverter}">
                                    <Binding Path="NavButtonsOnRight" Converter="{StaticResource BoolInverterConverter}"/>
                                    <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </qt:RadioButtonEx.IsCheckedReal>
                        </qt:RadioButtonEx>
                        <qt:RadioButtonEx x:Name="radNavButtonsOnRight_Yes"
                            Content="On the right"
                            HorizontalAlignment="Left"
                            IsEnabled="{Binding Path=IsChecked, ElementName=chkShowNavButtons}"
                            Margin="0,0,10,0"
                            Style="{StaticResource CheckStyle}">
                            <qt:RadioButtonEx.IsCheckedReal>
                                <MultiBinding Converter="{StaticResource LogicalAndMultiConverter}">
                                    <Binding Path="NavButtonsOnRight"/>
                                    <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </qt:RadioButtonEx.IsCheckedReal>
                        </qt:RadioButtonEx>
                    </StackPanel>
                    <CheckBox x:Name="chkMultipleTabRows"
                        Content="Allow multiple rows of tabs"
                        IsChecked="{Binding Path=MultipleTabRows}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkActiveTabOnBottomRow"
                        Content="Always put the row with the active tab on the bottom"
                        IsChecked="{Binding Path=ActiveTabOnBottomRow}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkMultipleTabRows}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabTweaks"
                DataContext="{Binding Path=tweaks}"
                Header="Tweaks"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabTweaks}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Enable or disable tweaks to Explorer's List View"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Tweaks that can be used with either List View"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkAlwaysShowHeaders"
                        Content="Display column headers in all view modes (Windows Vista/7)"
                        IsChecked="{Binding Path=AlwaysShowHeaders}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkRedirectLibraryFolders"
                        Content="Use the standard filesystem view for Library folders (Windows 7)"
                        IsChecked="{Binding Path=RedirectLibraryFolders}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkKillExtWhileRenaming"
                        Content="Deselect file extension when renaming files (Windows XP)"
                        IsChecked="{Binding Path=KillExtWhileRenaming}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkF2Selection"
                        Content="Cycle selection with F2 while renaming"
                        IsChecked="{Binding Path=F2Selection}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkWrapArrowKeySelection"
                        Content="Wrap around when moving the selection with the arrow keys"
                        IsChecked="{Binding Path=WrapArrowKeySelection}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkBackspaceUpLevel"
                        Content="Backspace goes up one level"
                        IsChecked="{Binding Path=BackspaceUpLevel}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkHorizontalScroll"
                        Content="Scrolling with mouse wheel while holding shift scrolls horizontally"
                        IsChecked="{Binding Path=HorizontalScroll}"
                        Style="{StaticResource CheckStyle}"/>
                    <Label
                        Content="Tweaks that can only be used with the older List View"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkForceSysListView"
                        Content="Enable the older List View control (Windows 7)"
                        IsChecked="{Binding Path=ForceSysListView}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkToggleFullRowSelect"
                        Content="Full row selection in Details view"
                        IsChecked="{Binding ToggleFullRowSelect}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkForceSysListView}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkDetailsGridLines"
                        Content="Show grid lines in Details view"
                        IsChecked="{Binding Path=DetailsGridLines}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkForceSysListView}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkAlternateRowColors"
                        Content="Alternate row colors in Details view"
                        IsChecked="{Binding Path=AlternateRowColors}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkForceSysListView}"
                        Style="{StaticResource CheckStyle}"/>
                    <Grid Margin="31,2,5,2">
                        <Grid.IsEnabled>
                            <MultiBinding Converter="{StaticResource LogicalAndMultiConverter}">
                                <Binding Path="IsChecked" ElementName="chkAlternateRowColors"/>
                                <Binding Path="IsEnabled" ElementName="chkAlternateRowColors"/>
                            </MultiBinding>
                        </Grid.IsEnabled>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label
                            Content="Foreground color: "
                            Grid.Column="0"
                            Grid.Row="0"/>
                        <Label
                            Content="Background color: "
                            Grid.Column="0"
                            Grid.Row="1"/>
                        <Button x:Name="btnAltRowForeground"
                            Background="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                            Click="btnAltRowColor_Click"
                            Grid.Column="1"
                            Grid.Row="0"
                            Height="22"
                            Tag="{Binding Path=AltRowForegroundColor, Mode=TwoWay}"
                            Width="22"/>
                        <Button x:Name="btnAltRowBackground"
                            Background="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                            Click="btnAltRowColor_Click"
                            Grid.Column="1"
                            Grid.Row="1"
                            Height="22"
                            Tag="{Binding Path=AltRowBackgroundColor, Mode=TwoWay}"
                            Width="22" />
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabTooltips"
                DataContext="{Binding Path=tips}"
                Header="Tooltips"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabTooltips}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Change the behavoir of Subfolder and Preview tooltips"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Subfolder Tips"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkShowSubDirTips"
                        Content="Enable Subfolder Tips"
                        IsChecked="{Binding Path=ShowSubDirTips}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkSubDirTipsWithShift"
                        Content="Only with the Shift key is down"
                        IsChecked="{Binding Path=SubDirTipsWithShift}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowSubDirTips}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <CheckBox x:Name="chkSubDirTipsFiles"
                        Content="Show files"
                        IsChecked="{Binding Path=SubDirTipsFiles}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowSubDirTips}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <CheckBox x:Name="chkSubDirTipsPreview"
                        Content="Show preview tooltips when mousing over menu items"
                        IsChecked="{Binding Path=SubDirTipsPreview}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowSubDirTips}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <Label
                        Content="Preview tooltips"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkShowTooltipPreviews"
                        Content="Enable preview tooltips"
                        IsChecked="{Binding Path=ShowTooltipPreviews}"
                        Style="{StaticResource CheckStyle}"/>
                    <CheckBox x:Name="chkShowPreviewsWithShift"
                        Content="Only with the Shift key is down"
                        IsChecked="{Binding Path=ShowPreviewsWithShift}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowTooltipPreviews}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <CheckBox x:Name="chkShowPreviewInfo"
                        Content="Show file information below images"
                        IsChecked="{Binding Path=ShowPreviewInfo}"
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowTooltipPreviews}"
                        Style="{StaticResource IndentedCheckStyle}"/>
                    <StackPanel
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowTooltipPreviews}"
                        Margin="31,1,0,1"
                        Orientation="Horizontal">
                        <Label
                            Content="Maximum Width x Height:"
                            Height="16"
                            Padding="0"/>
                        <qt:Spinner
                            Min="128"
                            Max="1920"
                            Margin="8,1"
                            Value="{Binding Path=PreviewMaxWidth}"/>
                        <Label
                            Content="x"
                            Height="16"
                            Margin="0"
                            Padding="0"/>
                        <qt:Spinner
                            Min="96"
                            Max="1200"
                            Margin="8,1"
                            Value="{Binding Path=PreviewMaxHeight}"/>
                    </StackPanel>
                    <StackPanel
                        IsEnabled="{Binding Path=IsChecked, ElementName=chkShowTooltipPreviews}"
                        Margin="31,1,0,1"
                        Orientation="Horizontal">
                        <Label
                            Content="Font:"
                            Height="16"
                            Padding="0"/>
                        <Button
                            Click="btnFontChoose_Click"
                            Content="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource FontStringConverter}}"
                            Height="23"
                            Margin="8,1"
                            Tag="{Binding Path=PreviewFont, Mode=TwoWay}"
                            Width="200"/>
                    </StackPanel>
                    <Grid Margin="13,15,0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label
                            Content="Text filetypes"
                            Height="16"
                            Padding="0"
                            Margin="2,0"
                            FontWeight="Bold"/>
                        <Label
                            Content="Image and Video filetypes"
                            Height="16"
                            Padding="0"
                            Margin="2,0"
                            FontWeight="Bold"
                            Grid.Column="2"/>
                        <ListBox 
                            x:Name="lstTextFileTypes"
                            ItemTemplate="{StaticResource FileTypeItemTemplate}"
                            Width="175"
                            Height="200"
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Margin="2"
                            SelectionMode="Extended"
                            KeyDown="LstTextFileTypes_OnKeyDown">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter 
                                        Property="IsSelected"
                                        Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <ListBox
                            x:Name="lstMediaFileTypes"
                            ItemTemplate="{StaticResource FileTypeItemTemplate}"
                            Width="175"
                            Height="200"
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="2"
                            Margin="2"
                            SelectionMode="Extended"
                            KeyDown="LstMediaFileTypes_OnKeyDown">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter 
                                        Property="IsSelected"
                                        Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <Button
                            x:Name="btnAddTextFileTypes"
                            Content="Add"
                            Grid.Column="1"
                            Grid.Row="1"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Top"
                            Width="60"
                            Click="btnAddTextFileTypes_Click"/>
                        <Button
                            x:Name="btnRemoveTextFileTypes"
                            Content="Remove"
                            Grid.Column="1"
                            Grid.Row="2"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Top"
                            Width="60"
                            Click="btnRemoveTextFileTypes_Click"/>
                        <Button
                            x:Name="btnResetTextFileTypes"
                            Content="Reset"
                            Grid.Column="1"
                            Grid.Row="3"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Bottom"
                            Width="60"
                            Click="btnResetTextFileTypes_Click"/>
                        <Button
                            x:Name="btnAddMediaFileTypes"
                            Content="Add"
                            Grid.Column="3"
                            Grid.Row="1"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Top"
                            Width="60"
                            Click="btnAddMediaFileTypes_Click"/>
                        <Button
                            x:Name="btnRemoveMediaFileTypes"
                            Content="Remove"
                            Grid.Column="3"
                            Grid.Row="2"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Top"
                            Width="60"
                            Click="btnRemoveMediaFileTypes_Click"/>
                        <Button
                            x:Name="btnResetMediaFileTypes"
                            Content="Reset"
                            Grid.Column="3"
                            Grid.Row="3"
                            Height="23"
                            HorizontalAlignment="Left"
                            Margin="2"
                            VerticalAlignment="Bottom"
                            Width="60" Click="btnResetMediaFileTypes_Click" />
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabGeneral"
                DataContext="{Binding Path=misc}"
                Header="General"
                Width="0">
                <Grid>
                    <StackPanel
                        Margin="14,5,10,0"
                        Orientation="Vertical">
                        <StackPanel
                            Margin="0,0,0,4"
                            Orientation="Horizontal">
                            <Image
                                Source="{Binding Source={x:Static qt:Resources_Image.imgTabMisc}, Converter={StaticResource BitmapToImageSourceConverter}}"
                                Style="{StaticResource PageHeaderImageStyle}"/>
                            <Label
                                Content="General options for QTTabBar's behavoir"
                                FontSize="13"
                                VerticalAlignment="Bottom"/>
                        </StackPanel>
                        <Label
                            Content="Taskbar integration"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <CheckBox x:Name="chkTaskbarThumbnails"
                            Content="Show tab previews on the Taskbar"
                            IsChecked="{Binding Path=TaskbarThumbnails}"
                            Style="{StaticResource CheckStyle}"/>
                        <Label
                            Content="History"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="chkKeepHistory"
                                Content="Keep history of closed tabs"
                                Grid.Column="0"
                                IsChecked="{Binding Path=KeepHistory}"
                                Height="16"
                                Margin="13,1,10,1"/>
                            <CheckBox x:Name="chkKeepRecentFiles"
                                Content="Keep history of opened files"
                                Grid.Row="1"
                                IsChecked="{Binding Path=KeepRecentFiles}"
                                Height="16"
                                Margin="13,1,10,1"/>
                            <qt:Spinner
                                Grid.Column="1"
                                Min="0"
                                Max="50"
                                Value="{Binding Path=TabHistoryCount}"/>
                            <qt:Spinner 
                                Grid.Column="1"
                                Grid.Row="1"
                                Min="1"
                                Max="50"
                                Value="{Binding Path=FileHistoryCount}" />
                            <Button x:Name="btnRecentTabsClear"
                                Click="btnRecentTabsClear_Click"
                                Content="Clear now"
                                Grid.Column="2"
                                Height="23"
                                Margin="5,2"
                                Width="75"/>
                            <Button x:Name="btnRecentFilesClear"
                                Click="btnRecentFilesClear_Click"
                                Content="Clear now"
                                Grid.Column="2"
                                Grid.Row="1"
                                Height="23"
                                Margin="5,2"
                                Width="75"/>
                        </Grid>
                        <Label
                            Content="Network"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <StackPanel
                            Orientation="Horizontal">
                            <Label
                                Content="Network timeout (Enter 0 for system default):"
                                Height="16"
                                Margin="13,1,10,1"
                                Padding="0"/>
                            <qt:Spinner
                                Height="23"
                                Min="0"
                                Max="120"
                                Margin="5,2"
                                Value="{Binding Path=NetworkTimeout}"/>
                        </StackPanel>
                        <StackPanel
                            Orientation="Horizontal">
                            <CheckBox x:Name="chkAutoUpdate"
                                Content="Check for updates periodically"
                                IsChecked="{Binding Path=AutoUpdate}"
                                Style="{StaticResource CheckStyle}"/>
                            <Button x:Name="btnUpdateNow"
                                Click="btnUpdateNow_Click"
                                Content="Check now"
                                Height="23"
                                Margin="5,2"
                                Width="75"/>
                        </StackPanel>
                        <Label
                            Content="Settings Location"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <qt:RadioButtonEx x:Name="radUseIniFileNo"
                            Content="Store settings in the Windows Registry"
                            IsCheckedReal="{Binding Path=UseIniFile, Converter={StaticResource BoolInverterConverter}}"
                            Style="{StaticResource CheckStyle}"/>
                        <qt:RadioButtonEx x:Name="radUseIniFileYes"
                            Content="Store settings in a .ini file"
                            IsCheckedReal="{Binding Path=UseIniFile}"
                            Style="{StaticResource CheckStyle}"/>
                        <StackPanel
                            Orientation="Horizontal">
                            <Button
                                Content="Export Settings..."
                                Height="23"
                                Margin="13,2,5,2"
                                Width="120"/>
                            <Button
                                Content="Import Settings..."
                                Height="23"
                                Margin="5,2"
                                Width="120"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabAppearance"
                DataContext="{Binding Path=skin}"
                Header="Appearance"
                Width="0">
                <ScrollViewer
                    VerticalScrollBarVisibility="Auto">
                    <StackPanel
                        Margin="14,5,10,0"
                        Orientation="Vertical">
                        <StackPanel
                            Margin="0,0,0,4"
                            Orientation="Horizontal">
                            <Image
                                Source="{Binding Source={x:Static qt:Resources_Image.imgTabSkin}, Converter={StaticResource BitmapToImageSourceConverter}}"
                                Style="{StaticResource PageHeaderImageStyle}"/>
                            <Label
                                Content="Change the appearance of tabs or the tab bar"
                                FontSize="13"
                                VerticalAlignment="Bottom"/>
                        </StackPanel>
                        <Label
                            Content="Tab image"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="chkUseTabSkin"
                                Content="Use custom tab image:"
                                Height="16"
                                IsChecked="{Binding Path=UseTabSkin}"
                                Margin="0,0,5,0"/>
                            <qt:FileFolderEntryBox
                                Folder="False"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Margin="5,1"
                                SelectedPath="{Binding Path=TabImageFile}"/>
                            <Label
                                Content="Sizing margins:"
                                Grid.Row="1"
                                Height="16"
                                Margin="18,0,5,0"
                                Padding="0"/>
                            <qt:MarginCombo
                                Grid.Column="1"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Margin="5,1"
                                Value="{Binding Path=TabSizeMargin}"
                                Width="120"/>
                            <Label
                                Content="Overlap area:"
                                Grid.Column="2"
                                Grid.Row="1"
                                Height="16"
                                Margin="18,0,5,0"
                                Padding="0"/>
                            <qt:Spinner
                                Grid.Column="3"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Margin="5,1"
                                Value="{Binding Path=OverlapPixels}"
                                Width="80"/>
                            <Label
                                Content="Content margins:"
                                Grid.Row="2"
                                Height="16"
                                Margin="18,0,5,0"
                                Padding="0"/>
                            <qt:MarginCombo
                                Grid.Column="1"
                                Grid.Row="2"
                                Margin="5,1"
                                Value="{Binding Path=TabContentMargin}"
                                Width="120"/>
                            <CheckBox x:Name="chkHitTestTransparent"
                                Content="Hit test transparent areas"
                                Grid.Column="2"
                                Grid.ColumnSpan="2"
                                Grid.Row="2"
                                Height="16"
                                IsChecked="{Binding Path=HitTestTransparent}"
                                Margin="18,0,0,0"
                                />
                        </Grid>
                        <Label
                            Content="Tab size"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <Grid
                            Height="50"
                            Margin="13,1,0,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Label
                                Content="Height:"
                                Height="16"
                                Margin="0,0,5,0"
                                Padding="0"/>
                            <StackPanel
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Orientation="Horizontal">
                                <qt:Spinner 
                                    Min="0"
                                    Max="100"
                                    Value="{Binding Path=TabHeight}"/>
                                <Label
                                    Content="Min Width:"
                                    Height="16"
                                    Margin="18,0,5,0"
                                    Padding="0"/>
                                <qt:Spinner 
                                    Min="10"
                                    Max="50"
                                    Value="{Binding Path=TabMinWidth}"/>
                                <Label
                                    Content="Max Width:"
                                    Height="16"
                                    Margin="18,0,5,0"
                                    Padding="0"/>
                                <qt:Spinner 
                                    Min="50"
                                    Max="999"
                                    Value="{Binding Path=TabMaxWidth}"/>
                            </StackPanel>
                            <Label
                                Content="Sizing mode:"
                                Grid.Row="1"
                                Height="16"
                                Margin="0,0,5,0"
                                Padding="0"/>
                            <StackPanel
                                Grid.Column="1"
                                Grid.Row="1"
                                Margin="5,0,0,0"
                                Orientation="Horizontal">
                                <qt:RadioButtonEx
                                    Content="Full width"
                                    Height="16"
                                    IsChecked="{Binding Path=FixedWidthTabs, Converter={StaticResource BoolInverterConverter}}"
                                    Margin="0,0,20,0"/>
                                <qt:RadioButtonEx
                                    Content="Same size"
                                    Height="16"
                                    IsChecked="{Binding Path=FixedWidthTabs}"
                                    Margin="0,0,10,0"/>
                            </StackPanel>
                        </Grid>
                        <Label
                            Content="Tab text"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <Grid
                            Margin="13,1,0,1">
                            <Grid.Resources>
                                <Style x:Key="ColorTileStyle" TargetType="Rectangle">
                                    <Setter Property="Stroke"           Value="Black"/>
                                    <Setter Property="StrokeThickness"  Value="1"/>
                                    <Setter Property="Height"           Value="16"/>
                                    <Setter Property="Width"            Value="16"/>
                                    <Setter Property="Margin"           Value="4,0"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="chkTextShadow"
                                Grid.Row="1"
                                Content=""
                                IsChecked="{Binding Path=TabTitleShadows}"
                                VerticalAlignment="Center"/>
                            <Label
                                Content="Text Colors:"
                                Grid.Column="1"
                                Height="16"
                                Padding="0"/>
                            <Label
                                Content="Shadow Colors:"
                                Grid.Column="1"
                                Grid.Row="1"
                                Height="16"
                                Padding="0"/>
                            <ToggleButton x:Name="btnTabTextColor"
                                Checked="btnShadTextColor_OnChecked"
                                ContextMenuService.Placement="Bottom"
                                Grid.Column="2"
                                Height="23"
                                HorizontalAlignment="Left"
                                HorizontalContentAlignment="Stretch"
                                IsChecked="{Binding ElementName=ctxTabTextColor, Path=IsOpen, Mode=TwoWay}"
                                Margin="10, 5, 30, 5"
                                Width="100"
                                VerticalAlignment="Center">
                                <DockPanel LastChildFill="True">
                                    <TextBlock
                                        DockPanel.Dock="Right"
                                        HorizontalAlignment="Right"
                                        Margin="4,0"
                                        Text="&#9660;"/>
                                    <StackPanel
                                        HorizontalAlignment="Center"
                                        Margin="0,1,0,0"
                                        Orientation="Horizontal"
                                        SnapsToDevicePixels="True">
                                        <Rectangle x:Name="rectTabTextActiveColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabTextActiveColor, Mode=TwoWay}"/>
                                        <Rectangle x:Name="rectTabTextInactiveColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabTextInactiveColor, Mode=TwoWay}"/>
                                        <Rectangle x:Name="rectTabTextHotColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabTextHotColor, Mode=TwoWay}"/>
                                    </StackPanel>
                                </DockPanel>
                                <ToggleButton.ContextMenu>
                                    <ContextMenu x:Name="ctxTabTextColor" 
                                        PlacementTarget="{Binding ElementName=btnTabTextColor}">
                                        <MenuItem x:Name="miTabTextActiveColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Active Color"
                                            Tag="{Binding ElementName=rectTabTextActiveColor}"/>
                                        <MenuItem x:Name="miTabTextInactiveColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Inactive Color"
                                            Tag="{Binding ElementName=rectTabTextInactiveColor}"/>
                                        <MenuItem x:Name="miTabTextHotColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Mouseover Color"
                                            Tag="{Binding ElementName=rectTabTextHotColor}"/>
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                            <ToggleButton x:Name="btnShadowColor"
                                Checked="btnShadTextColor_OnChecked"
                                ContextMenuService.Placement="Bottom"
                                Grid.Row="1"
                                Grid.Column="2"
                                Height="23"
                                HorizontalAlignment="Left"
                                HorizontalContentAlignment="Stretch"
                                IsChecked="{Binding ElementName=ctxShadowTextColor, Path=IsOpen, Mode=TwoWay}"
                                Margin="10, 5, 30, 5"
                                Width="100"
                                VerticalAlignment="Center">
                                <DockPanel LastChildFill="True">
                                    <TextBlock
                                        DockPanel.Dock="Right"
                                        HorizontalAlignment="Right"
                                        Margin="4,0"
                                        Text="&#9660;"/>
                                    <StackPanel
                                        HorizontalAlignment="Center"
                                        Margin="0,1,0,0"
                                        Orientation="Horizontal"
                                        SnapsToDevicePixels="True">
                                        <Rectangle x:Name="rectTabShadActiveColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabShadActiveColor, Mode=TwoWay}"/>
                                        <Rectangle x:Name="rectTabShadInactiveColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabShadInactiveColor, Mode=TwoWay}"/>
                                        <Rectangle x:Name="rectTabShadMouseoverColor"
                                            Style="{StaticResource ColorTileStyle}"
                                            Fill="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource ColorToBrushConverter}}"
                                            Tag="{Binding Path=TabShadHotColor, Mode=TwoWay}"/>
                                    </StackPanel>
                                </DockPanel>
                                <ToggleButton.ContextMenu>
                                    <ContextMenu x:Name="ctxShadowTextColor" 
                                        PlacementTarget="{Binding ElementName=btnTabTextColor}">
                                        <MenuItem x:Name="miTabShadActiveColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Active Color"
                                            Tag="{Binding ElementName=rectTabShadActiveColor}"/>
                                        <MenuItem x:Name="miTabShadInactiveColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Inactive Color"
                                            Tag="{Binding ElementName=rectTabShadInactiveColor}"/>
                                        <MenuItem x:Name="miTabShadMouseoverColor"
                                            Click="miColorMenuEntry_OnClick"
                                            Header="Mouseover Color"
                                            Tag="{Binding ElementName=rectTabShadMouseoverColor}"/>
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                            <Label
                                Content="Text Font:"
                                Grid.Column="3"
                                Height="16"
                                Padding="0"/>
                            <Label
                                Content="Alignment:"
                                Grid.Column="3"
                                Grid.Row="1"
                                Height="16"
                                Padding="0"/>
                            <Button x:Name="btnTextFont"
                                Click="btnFontChoose_Click" 
                                Content="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource FontStringConverter}}"
                                Grid.Column="4"
                                Grid.Row="0"
                                Height="23"
                                HorizontalAlignment="Stretch"
                                Margin="10, 5"
                                Tag="{Binding Path=TabTextFont, Mode=TwoWay}"
                                VerticalAlignment="Center"/>
                            <StackPanel 
                                Orientation="Horizontal"
                                Grid.Column="4"
                                Grid.Row="1">
                                <qt:RadioButtonEx x:Name="radTabTextCenteredNo"
                                    Content="Left"
                                    Height="16"
                                    IsChecked="{Binding Path=TabTextCentered, Converter={StaticResource BoolInverterConverter}}"
                                    Margin="10, 5"
                                    VerticalAlignment="Center"/>
                                <qt:RadioButtonEx x:Name="radTabTextCenteredYes"
                                    Content="Center"
                                    Height="16"
                                    IsChecked="{Binding Path=TabTextCentered}"
                                    Margin="10, 5"
                                    VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                        <Label
                            Content="Toolbar Background"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <Grid
                            Margin="13,1,0,1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                Content="Image"
                                Height="16"
                                Margin="0,0,15,0"
                                IsChecked="{Binding Path=UseRebarImage}"/>
                            <qt:FileFolderEntryBox
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Margin="0,2"
                                SelectedPath="{Binding Path=RebarImageFile}"/>
                            <CheckBox x:Name="chkUseRebarBGColor"
                                Content="Solid color"
                                Grid.Row="1"
                                Height="16"
                                IsChecked="{Binding Path=UseRebarBGColor}"
                                Margin="0,0,15,0"/>
                            <Button x:Name="btnRebarBGColorChoose"
                                Click="btnRebarBGColorChoose_Click"
                                Content="Choose"
                                Grid.Column="1"
                                Grid.Row="1"
                                Height="23"
                                HorizontalAlignment="Left"
                                Margin="0,2"
                                Width="75"/>
                            <CheckBox
                                Content="Image each bar seperately"
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Height="16"
                                IsChecked="{Binding Path=RebarImageSeperateBars}"
                                Margin="0,0,15,0"/>
                            <Label
                                Content="Stretch mode:"
                                Grid.Column="2"
                                Grid.Row="1"
                                Height="16"
                                Margin="0,0,15,0"
                                Padding="0"/>
                            <ComboBox x:Name="cmbRebarStretchMode"
                                DisplayMemberPath="Value"
                                Grid.Column="3"
                                Grid.Row="1"
                                Height="23"
                                HorizontalAlignment="Stretch"
                                SelectedValue="{Binding Path=RebarStretchMode}"
                                SelectedValuePath="Key"/>
                            <Label
                                Content="Sizing margins:"
                                Grid.Column="2"
                                Grid.Row="2"
                                Height="16"
                                Margin="0,0,15,0"
                                Padding="0"/>
                            <qt:MarginCombo x:Name="mcbRebarMargin"
                                Grid.Column="3"
                                Grid.Row="2"
                                Height="23"
                                HorizontalAlignment="Stretch"
                                Value="{Binding Path=RebarSizeMargin}">
                                <qt:MarginCombo.Style>
                                    <Style TargetType="{x:Type qt:MarginCombo}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedValue, ElementName=cmbRebarStretchMode}">
                                                <DataTrigger.Value>
                                                    <qt:StretchMode>Full</qt:StretchMode>
                                                </DataTrigger.Value>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </qt:MarginCombo.Style>
                            </qt:MarginCombo>
                        </Grid>
                        <Label
                            Content="Skin file"
                            Style="{StaticResource SectionHeaderStyle}"/>
                        <StackPanel
                            Margin="13,1,0,1"
                            Orientation="Horizontal">
                            <Button
                                Content="Import Skin..."
                                Height="23"
                                Margin="0,0,10,0"
                                Width="100"/>
                            <Button
                                Content="Export Skin..."
                                Height="23"
                                Margin="0,0,10,0"
                                Width="100"/>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem x:Name="tabMouse"
                DataContext="{Binding Path=mouse}"
                Header="Mouse"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabMouse}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Assign commands to different mouse actions"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <StackPanel
                        Margin="13,1,0,1"
                        Orientation="Horizontal">
                        <Label
                            Content="Target:"
                            Height="16"
                            Margin="0,0,15,0"
                            Padding="0"/>
                        <ComboBox x:Name="cmbMouseTarget"
                            DisplayMemberPath="Value"
                            Height="23"
                            SelectedValuePath="Key"
                            SelectionChanged="cmbMouseTarget_SelectionChanged"
                            Width="120"/>
                    </StackPanel>
                    <StackPanel
                        Margin="0,10,0,1"
                        Orientation="Horizontal">
                        <ComboBox x:Name="cmbMouseModifiers"
                            DisplayMemberPath="Value"
                            Height="23"
                            SelectedValuePath="Key"
                            VerticalAlignment="Center"
                            Width="70"
                            Margin="0,0,10,0">
                        </ComboBox>
                        <ComboBox x:Name="cmbMouseButtons"
                            DisplayMemberPath="Value"
                            Height="23"
                            SelectedValuePath="Key"
                            VerticalAlignment="Center"
                            Width="100">
                        </ComboBox>
                        <Label
                            Content="="
                            Margin="8,0"
                            Padding="0"
                            VerticalAlignment="Center"/>
                        <ComboBox x:Name="cmbMouseAction"
                            DisplayMemberPath="Value"
                            Height="23"
                            SelectedValuePath="Key"
                            VerticalAlignment="Center"
                            Width="180"/>
                        <Button x:Name="btnMouseActionAdd"
                            Click="btnMouseActionAdd_Click"
                            Content="Add"
                            Height="23"
                            Margin="20,0,0,0"
                            Width="50">
                            <Button.Resources>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cmbMouseAction, Path=SelectedIndex}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cmbMouseButtons, Path=SelectedIndex}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cmbMouseTarget, Path=SelectedIndex}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </StackPanel>
                    <ListView x:Name="lvwMouseBindings"
                        Height="330"
                        BorderThickness="1.000001"
                        Margin="0,10">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource WinFormsGroupStyle}"/>
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Mouse Chord" Width="170">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                    Foreground="#FF000000"
                                                    Text="{Binding Path=GestureText}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Action" Width="310">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Foreground="#FF000000"
                                                Text="{Binding Path=ActionText}"
                                                TextAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Label
                        Content="Other mouse options"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox
                        Content="Mouse wheel scrolls the window under the mouse"
                        Margin="13,0,1,0"/>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabKeys"
                Header="Keys"
                Width="0">
                <DockPanel
                    Margin="14,5,10,0">
                    <StackPanel
                        DockPanel.Dock="Top"
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabKeys}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Change keyboard shortcuts"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <TextBlock 
                        Text="Select an action from the list and press the key gesture you would like to bind to it.&#x0a;Press Escape to clear the binding." 
                        TextWrapping="Wrap"
                        DockPanel.Dock="Top"
                        Margin="5,10,5,5"/>
                    <ListView x:Name="lvwHotkeys"
                        PreviewKeyDown="lvwHotkeys_PreviewKeyDown"
                        TextInput="lvwHotkeys_TextInput"
                        BorderThickness="1.000001"
                        Margin="0,10">
                        <ListView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource WinFormsGroupStyle}"/>
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Action" Width="350">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox x:Name="chkKeyEnable"
                                                    FocusVisualStyle="{x:Null}"
                                                    IsEnabled="{Binding Path=Assigned}"
                                                    IsChecked="{Binding Path=Enabled}"
                                                    VerticalAlignment="Center"/>
                                                <TextBlock x:Name="txtKeyAction"
                                                    Foreground="#FF000000"
                                                    Text="{Binding Path=Action}"
                                                    Margin="6,0"/>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Path=Enabled}"
                                                    Value="False">
                                                    <Setter 
                                                        TargetName="chkKeyEnable" 
                                                        Property="Foreground" 
                                                        Value="#FF888888"/>
                                                    <Setter 
                                                        TargetName="txtKeyAction" 
                                                        Property="Foreground" 
                                                        Value="#FF888888"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Keystroke">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock x:Name="txtKeyString"
                                                Foreground="#FF000000"
                                                Text="{Binding Path=HotkeyString}"
                                                TextAlignment="Center"
                                                Width="120"/>
                                            <DataTemplate.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Path=Enabled}"
                                                    Value="False">
                                                    <Setter 
                                                        TargetName="txtKeyString" 
                                                        Property="Foreground" 
                                                        Value="#FF888888"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tabGroups"
                Header="Groups"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabGroups}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Create and manage tab groups"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Grid
                        Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnGroupsMoveNodeUp"
                            Content="^"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsMoveNodeUp_Click" />
                        <Button x:Name="btnGroupsMoveNodeDown"
                            Content="v"
                            Grid.Column="1"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsMoveNodeDown_Click" />
                        <Button x:Name="btnGroupsAddSeparator"
                            Content="---"
                            Grid.Column="2"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsAddSeparator_Click" />
                        <Button x:Name="btnGroupsAddGroup" Content="G"
                            Grid.Column="3"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsAddGroup_Click" />
                        <Button x:Name="btnGroupsAddFolder"
                            Content="+"
                            Grid.Column="4"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsAddFolder_Click" />
                        <Button x:Name="btnGroupsRemoveNode"
                            Content="-"
                            Grid.Column="5"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"
                            Click="btnGroupsRemoveNode_Click" />
                    </Grid>
                    <qt:TreeListView
                        x:Name="tvwGroups"
                        ItemTemplate="{StaticResource GroupItemTemplate}"
                        Height="338"/>
                    <DockPanel
                        Margin="0,10,0,0">
                        <Label
                            Content="Shortcut Key:"
                            DockPanel.Dock="Left"
                            Height="23"
                            Margin="0,0,10,0"
                            Padding="0"
                            VerticalContentAlignment="Center"/>
                        <TextBox Height="23"/>
                    </DockPanel>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabApps"
                Header="Applications"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabApps}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Create shortcuts to commonly used files or applications"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Grid
                        Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnAppsMoveNodeUp"
                            Click="btnAppsMoveNodeUp_Click"    
                            Content="^"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"/>
                        <Button x:Name="btnAppsMoveNodeDown"
                            Click="btnAppsMoveNodeDown_Click" 
                            Content="v"
                            Grid.Column="1"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="0,4,4,0"
                            VerticalAlignment="Top"
                            Width="28" Grid.ColumnSpan="2" />
                        <Button x:Name="btnAppsAddSeparator"
                            Click="btnAppsAddSeparator_Click"
                            Content="---"
                            Grid.Column="3"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"/>
                        <Button x:Name="btnAppsAddFolder"
                            Click="btnAppsAddFolder_Click"
                            Content="F"
                            Grid.Column="4"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"/>
                        <Button x:Name="btnAppsAddNode"
                            Click="btnAppsAddNode_Click"
                            Content="+"
                            Grid.Column="5"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"/>
                        <Button x:Name="btnAppsRemoveNode"
                            Click="btnAppsRemoveNode_Click"
                            Content="-"
                            Grid.Column="6"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="4"
                            VerticalAlignment="Top"
                            Width="28"/>
                    </Grid>
                    <TreeView x:Name="treeApps"
                              Height="489">                        
                        <TreeViewItem x:Name="treeAppsRoot" 
                                      Header="Applications"
                                      IsExpanded="True" 
                                      IsSelected="True"/>
                    </TreeView>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabButtonBar"
                DataContext="{Binding Path=bbar}"
                Header="Button Bar"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabBBar}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Customize the Button Bar"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Buttons"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <Grid
                        Height="199"
                        Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="lstButtonBarPool"
                            Grid.RowSpan="2"
                            ItemTemplate="{StaticResource ButtonBarItemTemplate}"/>
                        <Button x:Name="btnBBarAdd"
                            Click="btnBBarAdd_Click" 
                            Content="Add >>"
                            Grid.Column="1"
                            Margin="8,4"
                            VerticalAlignment="Bottom"/>
                        <Button x:Name="btnBBarRemove"
                            Click="btnBBarRemove_Click"
                            Content="&lt;&lt; Remove"
                            Grid.Column="1"
                            Grid.Row="1"
                            Margin="8,4"
                            VerticalAlignment="Top"/>
                        <ListBox x:Name="lstButtonBarCurrent"
                            Grid.Column="2"
                            Grid.RowSpan="2"
                            ItemTemplate="{StaticResource ButtonBarItemTemplate}"/>
                        <Button x:Name="btnBBarUp"
                            Click="btnBBarUp_Click" 
                            Content="&#9650;"
                            Grid.Column="3"
                            Margin="8,4"
                            VerticalAlignment="Bottom"
                            Width="30"/>
                        <Button x:Name="btnBBarDown"
                            Click="btnBBarDown_Click"
                            Content="&#9660;"
                            Grid.Column="3"
                            Grid.Row="1"
                            Margin="8,4"
                            VerticalAlignment="Top"
                            Width="30"/>
                    </Grid>
                    <Label
                        Content="Button Bar Options"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <CheckBox x:Name="chkLargeButtons"
                        Content="Large icons"
                        Height="16"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding Path=LargeButtons}"
                        Margin="13,1,0,1"/>
                    <CheckBox x:Name="chkShowButtonLabels"
                        Content="Show labels on buttons"
                        Height="16"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding Path=ShowButtonLabels}"
                        Margin="13,1,0,1"/>
                    <CheckBox x:Name="chkLockDropDownButtons"
                        Content="Lock the order of dropdown button menus"
                        Height="16"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding Path=LockDropDownButtons}"
                        Margin="13,1,0,1"/>
                    <CheckBox x:Name="chkLockSearchBarWidth"
                        Content="Lock the size of the search box"
                        Height="16"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding Path=LockSearchBarWidth}"
                        Margin="13,1,0,1"/>
                    <Label
                            Content="Custom Button Images"
                            Style="{StaticResource SectionHeaderStyle}" />
                    <qt:FileFolderEntryBox 
                        SelectedPath="{Binding Path=ImageStripPath}"/>
                </StackPanel>                
            </TabItem>
            <TabItem x:Name="tabPlugins"
                Header="Plugins"
                Width="0">
                <DockPanel
                    Margin="14,5,10,0">
                    <StackPanel
                        DockPanel.Dock="Top"
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabPlugin}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Manage third-party plugins"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Button x:Name="btnBrowsePlugin"
                        Click="btnBrowsePlugin_Click"
                        Content="Install a Plugin"
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Left"
                        Width="120"/>
                    <ListBox x:Name="lstPluginView"
                        HorizontalContentAlignment="Stretch"
                        ItemTemplate="{StaticResource PluginItemTemplate}"
                        Margin="0,10"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter 
                                    Property="IsSelected"
                                    Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="tabLanguage"
                DataContext="{Binding Path=lang}"
                Header="Language"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabLang}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="Change the language"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Label
                        Content="Main language"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="184*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <qt:RadioButtonEx x:Name="radUseBuiltInYes"
                            Content="Use built-in language:"
                            Height="16"
                            HorizontalAlignment="Left"
                            IsChecked="{Binding Path=UseBuiltIn}"
                            Margin="5,9"
                            VerticalAlignment="Top"/>
                        <qt:RadioButtonEx x:Name="radUseBuiltInNo"
                            Content="Use language file:"
                            Grid.Row="1"
                            Height="16"
                            HorizontalAlignment="Left"
                            IsChecked="{Binding Path=UseBuiltIn, Converter={StaticResource BoolInverterConverter}}"
                            Margin="5,9"
                            VerticalAlignment="Top"/>
                        <ComboBox
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Height="23"
                            HorizontalAlignment="Stretch"
                            Margin="5"
                            VerticalAlignment="Top"/>
                        <TextBox
                            Grid.Column="1"
                            Grid.Row="1"
                            Height="23"
                            HorizontalAlignment="Stretch"
                            Margin="5"
                            VerticalAlignment="Top"/>
                        <Button
                            Content="..."
                            Grid.Column="2"
                            Grid.Row="1"
                            Height="23"
                            HorizontalAlignment="Right"
                            Margin="5"
                            VerticalAlignment="Top"
                            Width="28"/>
                    </Grid>
                    <Label
                        Content="Plugin language files"
                        Style="{StaticResource SectionHeaderStyle}"/>
                    <ListBox Height="185"/>
                    <StackPanel
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button
                            Content="+"
                            Height="23"
                            Margin="5"
                            Width="28"/>
                        <Button
                            Content="-"
                            Height="23"
                            Margin="5"
                            Width="28"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabHelp"
                Header="About"
                Width="0">
                <StackPanel
                    Margin="14,5,10,0"
                    Orientation="Vertical">
                    <StackPanel
                        Margin="0,0,0,4"
                        Orientation="Horizontal">
                        <Image
                            Source="{Binding Source={x:Static qt:Resources_Image.imgTabAbout}, Converter={StaticResource BitmapToImageSourceConverter}}"
                            Style="{StaticResource PageHeaderImageStyle}"/>
                        <Label
                            Content="View credits and version information"
                            FontSize="13"
                            VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <Image
                        Height="150"
                        HorizontalAlignment="Center"
                        Stretch="Fill"
                        Width="200"/>
                    <Label
                        Content="QTTabBar version 2.0"
                        Height="28"
                        HorizontalAlignment="Center"/>
                    <Label
                        Content="Original code by Quizo"
                        Height="28"
                        HorizontalAlignment="Center"/>
                    <Label
                        Content="Developer: Paul Accisano"
                        Height="28"
                        HorizontalAlignment="Center"/>
                    <Label
                        Content="Web page: www.qttabbar.sf.net"
                        Height="28"
                        HorizontalAlignment="Center"/>
                    <Label
                        Content="If you enjoy using QTTabBar, please consider a small donation."
                        Height="28"
                        HorizontalAlignment="Center"/>
                    <Image
                        Height="150"
                        HorizontalAlignment="Center"
                        Stretch="Fill"
                        Width="200"/>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>

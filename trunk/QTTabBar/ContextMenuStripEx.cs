// Generated by Reflector from c:\program files\qttabbar\QTTabBar.dll
namespace QTTabBarLib
{
  using System;
  using System.ComponentModel;
  using System.Runtime.CompilerServices;
  using System.Windows.Forms;
  
  internal sealed class ContextMenuStripEx : ContextMenuStrip
  {
    private bool fDefaultShowCheckMargin;
    private static ToolStripRenderer menuRenderer;
    private static int nCurrentRenderer;
    
    private static  event EventHandler menuRendererChanged;
    
    static ContextMenuStripEx()
    {
      InitializeMenuRenderer();
    }
    
    public ContextMenuStripEx(IContainer container, bool fShowCheckMargin)
    {
      if (container != null)
      {
        container.Add(this);
      }
      this.fDefaultShowCheckMargin = fShowCheckMargin;
      base.ShowCheckMargin = fShowCheckMargin || (nCurrentRenderer == 2);
      base.Renderer = menuRenderer;
      menuRendererChanged = (EventHandler) Delegate.Combine(menuRendererChanged, new EventHandler(this.ContextMenuStripEx_menuRendererChanged));
    }
    
    private void ContextMenuStripEx_menuRendererChanged(object sender, EventArgs e)
    {
      if (base.InvokeRequired)
      {
        base.Invoke(new MethodInvoker(this.SetRenderer));
      }
      else
      {
        this.SetRenderer();
      }
    }
    
    protected override void Dispose(bool disposing)
    {
      menuRendererChanged = (EventHandler) Delegate.Remove(menuRendererChanged, new EventHandler(this.ContextMenuStripEx_menuRendererChanged));
      base.Dispose(disposing);
    }
    
    public static void InitializeMenuRenderer()
    {
      bool flag = false;
      if (QTUtility.CheckConfig(13, 0x20))
      {
        if (QTUtility.CheckConfig(13, 0x10))
        {
          if (nCurrentRenderer != 1)
          {
            menuRenderer = new XPMenuRenderer(false);
            nCurrentRenderer = 1;
            flag = true;
          }
        }
        else if (nCurrentRenderer != 2)
        {
          menuRenderer = new VistaMenuRenderer(false);
          nCurrentRenderer = 2;
          flag = true;
        }
      }
      else if (nCurrentRenderer != 0)
      {
        menuRenderer = null;
        nCurrentRenderer = 0;
        flag = true;
      }
      if (flag && (menuRendererChanged != null))
      {
        menuRendererChanged(null, EventArgs.Empty);
      }
    }
    
    private void SetRenderer()
    {
      base.Renderer = menuRenderer;
      base.ShowCheckMargin = (nCurrentRenderer == 2) || this.fDefaultShowCheckMargin;
    }
  }
}
